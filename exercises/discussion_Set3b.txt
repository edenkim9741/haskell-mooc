[Ex 1]
tail recursion을 이용하여 start 값을 리스트의 첫 부분에 추가하고 나머지 리스트는 recursion으로 처리했다.

[Ex 2]
sum 함수를 사용할 수 없기 때문에 recursion을 이용하여 n까지의 합을 구하는 sum 함수를 구현했고, (++)연산 또한 사용할 수 없었기 때문에 낮은 수까지의 합부터 리스트를 채워나가는 방식으로 구현했다. 이를 위해서 sums'라는 재귀 도움 함수를 만들었고, 이 함수는 1부터 n까지의 각각의 합을 리스트로 반환하는 함수이다.

[Ex 3]
pattern matching을 이용하여 리스트가 비었을 때에는 def를 반환하고, 리스트에 값이 하나 있을 때에는 그 값을 반환하고 나머지 경우에는 리스트의 값이 하나가 될 때까지 recursion으로 처리했다.

[Ex 4]
pattern matching을 이용하여 리스트가 비었을 때에는 def를 반환하고, 얻고자 하는 인덱스가 0일 때에는 리스트의 첫번째 값을 반환하고, 나머지 경우에는 인덱스를 하나씩 줄여가며 recursion으로 처리했다.