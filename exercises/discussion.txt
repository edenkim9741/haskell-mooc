[Ex 1]
one, two라는 두 변수를 Int 타입으로 선언하고, one에는 1을, two에는 2를 할당한다.

[Ex 2]
하나의 Int 변수를 받아 2를 곱하여 Int로 반환하는 double이라는 함수를 작성했다.

[Ex 3]
double 함수의 인자로 double 함수를 넣어 결과적으로 4를 곱하는 함수를 작성했다.

[Ex 4]
sqrt 함수를 사용하기 위해서 Double로 4개의 인수를 구성했고, 거리를 구하는 공식인 sqrt((x2-x1)**2 + (y2-y1)**2)을 사용하여 두 점 사이의 거리를 구하는 함수를 작성했다. 

[Ex 5]
조건에 따라 분기하기 위해서 if-else 문을 사용했다. even 함수를 이용하여 True라면 eeny를, False라면 meeny를 반환하는 함수를 작성했다.

[Ex 6]
if 문의 조건에 ||을 사용하여 or 조건을 추가했다. password가 mellon이어도 You're in이라는 메세지를 출력하도록 하였다.

[Ex 7]
주어진 조건이 3개였기 때문에 if-else 문에서 더 나아가 else if를 사용했다. 물품의 무게가 500이하라면 250, 500 초과 5000 이하라면 300+(물품의 무게), 5000 초과라면 6000을 반환하도록 하였다.

[Ex 8]
비교가 아닌 pattern matching을 사용하기 위해서 isZero 0 = True, isZero _ = False와 같이 함수를 작성했다.

[Ex 9]
함수를 재귀적으로 구현하기 위해서 n까지의 합을 (n-1까지의 합) + n으로 표현했다. 종료 조건은 n이 1이 되었을 때이고, 이때는 1을 반환한다.

[Ex 10]
마찬가지로 재귀적으로 구현하기 위해서 n의 k제곱을 (n의 (k-1)제곱) * n으로 표현했다. 종료 조건은 k가 0이 되었을 때이고, 이때는 1을 반환한다.

[Ex 11]
재귀적으로 구현하기 위해서 ilog3(n)을 1 + ilog3(n/3)으로 표현했다. 종료 조건은 n이 3보다 작아졌을 때이고, 이때는 0을 반환한다.