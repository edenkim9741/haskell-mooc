[Ex 1]
하스켈에서는 변수를 바꿀 수 없기 때문에 그냥 list를 선언하더라도 상수를 선언한 것과 같다.

[Ex 2]
기존 배열을 뒤집은 다음 그 배열의 앞에서부터 n개를 취하고 다시 뒤집으면 기존 배열의 뒤에서 n개의 원소를 가지는 것과 같다.

[Ex 3]
take i xs 함수를 호출하면 xs의 앞에서부터 i개의 원소를 가지는 배열을 반환하고, 거기에 x원소를 붙인 다음 drop (i+1) xs를 통해서 나머지 xs의 원소들을 붙여주면 (기존 i 위치에 있던 원소 제외) 된다.

[Ex 4]
take j s 를 통해서 j번째 이전까지의 문자열을 가지는 배열을 다시 한 번 drop 함수의 인자로 넣는다. drop에서는 i번째까지의 원소를 탈락시키므로 i번째부터 j번째까지의 문자열을 가지는 배열이 반환된다.

[Ex 5]
하스켈에서는 reverse 함수를 통해서 배열을 뒤집을 수 있으므로, guard 문을 이용해서 뒤집은 문자열이 뒤집기 전 문자열과 같다면 True를 반환하고 아니면 False를 반환하면 된다.

[Ex 6]
기본적으로 palindromify 함수는 인수로 들어온 문자열이 palindrom이면 반환하고 그렇지 않다면 맨 끝 문자들이 탈락된 문자열에 대해서 재귀적으로 palindromify 함수를 호출한다. 문자열의 가운데 부분으로 점점 줄어드는 효과를 만들기 위해서 drop 1 (take ((length s)-1) s)를 사용했다.

[Ex 7]
패턴 매칭을 사용해서 y가 0인 경우에는 Nothing을 반환하고,  그렇지 않은 경우에는 정상적인 연산인 (x `div` y)를 Just로 감싸서 반환한다.

[Ex 8]
마찬가지로 패턴 매칭을 사용해서 last가 Nothing인 경우에는 first만을 사용하여 문자열을 만든 후 반환하고, last가 있는 경우에는 (Just last)를 사용하여 first와 last가 모두 포함된 문자열을 반환한다.

[Ex 9]
guard를 사용하여 인덱스가 0보다 크거나 같고 배열의 길이보다 짧다면 Just (xs !! i)를 반환하고 그렇지 않은 경우에는 Nothing을 반환한다.