[Ex 1]
예시에서 주어진 대로 k가 0인 경우에는 1, n이 0인 경우에는 0을 패턴 매칭한다. 이 때, n이 0인 경우를 먼저 패턴매칭해야 한다. 그렇지 않으면 k가 0이고 n이 0인 경우에는 1을 반환해야 하는데 n이 0인 경우에 0을 반환하게 된다.

[Ex 2]
guard 문법을 사용해서 n이 1보다 작거나 같을 때에는 1을 반환하고, 짝수인 경우에는 바로 oddFactorial (n-1)을 호출하여 넘어간다. 다른 경우(n이 1보다 큰 홀수인 경우)에는 oddFactorial (n-1) * n을 반환한다.

[Ex 3]
패턴 매칭을 이용해서 b가 0인 경우에는 나머지가 0인 것이므로 최대공약수인 a를 반환한다. 그렇지 않은 경우에는 b와 a를 b로 나눈 나머지를 인자로 myGcd 함수를 호출한다.

[Ex 4]
guard 문법을 사용해서 반환해야하는 문자열 길이가 padding보다 크거나 같아지면 바로 문자열을 반환하고, 그렇지 않은 경우에는 같아질 때까지 padding을 추가한다.

[Ex 5]
countdown 함수는 Int만을 input parameter로 사용하므로 이를 돕기 위해 countdown'이라는 함수를 만들었다. countdown' 함수는 "Ready! "라는 문자열로 시작하여 n개만큼의 카운트 다운을 시행한 뒤 "Liftoff!"라는 문자열로 끝나게 된다.

[Ex 6]
n이 0이나 1인 경우에는 1이므로 1을 반환하고, 그렇지 않은 경우에는 smallestDivisor' 함수를 호출하여 나누어떨어지는 가장 작은 수를 찾는다. smallestDivisor'는 2부터 시작하여 1씩 커지며 나누어떨어지는 수가 나타나면 그 수를 반환한다.